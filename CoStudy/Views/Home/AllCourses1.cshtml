@model IEnumerable<OnlineCourse>



@{
    ViewData["title"] = "Online Courses";

    Page page = new Page();
    int PageNo = 0;
    if (ViewBag.Page != null)
    {

        page = ViewBag.Page;
        PageNo = page.CurrentPage;
    }

}

<head>

    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">
</head>

    <!----html code for statements (change every 25 seconds)-->
    <div style="background-color: #ccc; margin: 4em 5em;border-radius: 20px;padding: 3em;">
        <h1 style="display:inline-block;"> Courses </h1>
        <span>
            <form asp-action="AllCourses1" asp-controller="Home" class="search-bar" style="float: right;">
                <input type="search" name="Search_Data" pattern=".*\S.*" placeholder="search...">
                <button class="search-btn" type="submit">
                </button>
            </form>
        </span>

        <h2> Explore our comprehensive technical courses and discover how you can learn and excel in these fields... </h2>
        <div class="slider">
            <div class="slide-track">

                
                <!--testing slide - delete them - loop from database-->
                <div class="slide">
                    <p> Web developmnet</p>
                </div>
                <div class="slide">
                    <p> AI</p>
                </div>
                <div class="slide">
                    <p> security</p>
                </div>
                <div class="slide">
                    <p> Networking</p>
                </div>
                <div class="slide">
                    <p>Database</p>
                </div>
                <div class="slide">
                    <p>Machine learning</p>
                </div>
                <div class="slide">
                    <p>Algorithms</p>
                </div>
                <div class="slide">
                    <p>Data analysis</p>
                </div>
                <div class="slide">
                    <p>Mobile developmnet</p>
                </div>
                <div class="slide">
                    <p>Software engineering</p>
                </div>
               
                
                <!------------ end of testing slide--------------------->
            </div>
        </div>
        <!--end of slider-->
        <!-----------------------Courses View---------------------------->


    @if (!Model.Any())
    {

        <div style="text-align:center;margin-bottom:10px; margin-top: 50px;">
            <p style="font-size: 30px;"> No results Found  </p>
            <img src="~/images/noresult.png" alt="no result found" width="600px" height="350px">
        </div>

    }
    else
    {
        
     <div class="courses-container">

        @foreach(var course in Model)
        {
            
<div class="course-card">
                    <a href="@Url.Content(course.CourseURL)" class="course-card-link">

                <div class="course-image">
                    <img src="~/images/banner.jpg" alt="Course Image" data-category="@course.Category">
                </div>
                <div class="course-details">
                        <h3 style="font-weight: bolder;color:#0c48db">@course.CourseTitle</h3>

                        <h5 style="font-weight: light;" class="course-description">@course.CourseDescription</h5>

                    <div class="rating">
                        <span class="fa fa-star" data-rating="1"></span>
                        <span class="fa fa-star" data-rating="2"></span>
                        <span class="fa fa-star" data-rating="3"></span>
                        <span class="fa fa-star" data-rating="4"></span>
                        <span class="fa fa-star" data-rating="5"></span>
                    </div>

                        @if (@course.ReviewCount != null)
                        {
                                <i class="bi bi-eye-fill" style="float:right">@course.ReviewCount</i>
                        }
                    </div>
                    </a>
                </div>
        }

        
        </div>
    }



    @*    start of pagination bar
    *@    <div style="display: flex;
    justify-content: flex-end;margin-right:320px;">

        @if (page.TotalPages > 0)
        {

            <ul style="list-style-type: none;
    padding:0;
    margin:0;" justify-content-end">

                @for (var pge = page.StartPage; pge <= page.EndPage; pge++)
                {

                    <li style=" display: inline-block;
    margin: 0 5px;" @(pge==page.CurrentPage?"active" :"")>
                        <a style="display: inline-block;
    padding: 5px 10px;
    text-decoration: none;
    color: #333;
    background-color: #fff;
    border: 1px solid #ddd;
    border-radius: 4px;
    transition: background-color 0.3s ease;" asp-controller="Home" asp-action="AllCourses1" asp-route-pg="@pge">@pge</a>




                    </li>

                }

            </ul>

        }

        @*        end of pagination
        *@

   
    </div>
</div>

    <!-----------------------end of courses------------------------>

    <script>
        /* display cat name above course img*/
        document.addEventListener('DOMContentLoaded', () => {
            const courseImages = document.querySelectorAll(".course-image img");
            // Loop through each course image and add a category name overlay
            courseImages.forEach((image) => {
                const categoryName = image.dataset.category; // Get the category name from the data-category attribute
                const overlay = document.createElement("div"); // Create a new div element for the overlay
                overlay.classList.add("category-overlay"); // Add the "category-overlay" class to the div element
                overlay.textContent = categoryName; // Set the text content of the div element to the category name
                image.parentElement.appendChild(overlay); // Add the div element as a child of the course image's parent element
            });
        });
        /*limit descreption char appears*/
        // Get the course description element
    var descriptions = document.getElementsByClassName("course-description");

    for (var i = 0; i < descriptions.length; i++) {
        var description = descriptions[i];
        var truncatedDescription = description.textContent.substr(0, 350) + "...";
        description.textContent = truncatedDescription;
    }

        /*rating system*/
    /*rating system*/
    function handleStarClick(e, ratingSystem) {
        const clickedStar = e.target;
        const clickedRating = clickedStar.getAttribute("data-rating");
        const stars = ratingSystem.querySelectorAll(".fa-star");
        for (let i = 0; i < stars.length; i++) {
            const star = stars[i];
            const starRating = star.getAttribute("data-rating");
            if (starRating <= clickedRating) {
                star.classList.add("active");
            } else {
                star.classList.remove("active");
            }
        }
    }

    const ratingSystems = document.querySelectorAll(".rating");
    ratingSystems.forEach((ratingSystem) => {
        const stars = ratingSystem.querySelectorAll(".fa-star");
        stars.forEach((star) => {
            star.classList.remove("active");
            star.addEventListener("click", (e) => {
                handleStarClick(e, ratingSystem);
            });
        });
    });
    </script>
